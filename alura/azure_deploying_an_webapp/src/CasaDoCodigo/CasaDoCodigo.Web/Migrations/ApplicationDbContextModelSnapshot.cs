// <auto-generated />
using System;
using CasaDoCodigo.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CasaDoCodigo.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CasaDoCodigo.Web.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a50a2d9-5991-4679-b4bd-c5940e7ad86c"),
                            Name = "Paulo Silveira"
                        },
                        new
                        {
                            Id = new Guid("5a2f806c-9607-4430-9195-bc562756dbc0"),
                            Name = "Rodrigo Turini"
                        });
                });

            modelBuilder.Entity("CasaDoCodigo.Web.Models.AuthorBooks", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBooks");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("3a50a2d9-5991-4679-b4bd-c5940e7ad86c"),
                            BookId = new Guid("4937c3eb-e645-4fea-8abe-59a881a41083")
                        },
                        new
                        {
                            AuthorId = new Guid("5a2f806c-9607-4430-9195-bc562756dbc0"),
                            BookId = new Guid("4937c3eb-e645-4fea-8abe-59a881a41083")
                        });
                });

            modelBuilder.Entity("CasaDoCodigo.Web.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4937c3eb-e645-4fea-8abe-59a881a41083"),
                            Name = "Java 8 Prático"
                        });
                });

            modelBuilder.Entity("CasaDoCodigo.Web.Models.AuthorBooks", b =>
                {
                    b.HasOne("CasaDoCodigo.Web.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaDoCodigo.Web.Models.Book", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
