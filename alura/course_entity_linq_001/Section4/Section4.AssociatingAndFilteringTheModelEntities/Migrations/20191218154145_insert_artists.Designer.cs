// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Section4.AssociatingAndFilteringTheModelEntities;

namespace Section4.AssociatingAndFilteringTheModelEntities.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191218154145_insert_artists")]
    partial class insert_artists
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Section4.AssociatingAndFilteringTheModelEntities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Section4.AssociatingAndFilteringTheModelEntities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bryan Hayes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Claudia VonRueden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jasmine Paucek"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Melissa Metz"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mark Haag"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Roberta Waters"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Teri Veum"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pearl Larson"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Raymond Wisoky"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gordon Crooks"
                        });
                });

            modelBuilder.Entity("Section4.AssociatingAndFilteringTheModelEntities.Album", b =>
                {
                    b.HasOne("Section4.AssociatingAndFilteringTheModelEntities.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
